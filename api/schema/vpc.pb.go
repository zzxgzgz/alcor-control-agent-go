//
//MIT License
//Copyright(c) 2020 Futurewei Cloud
//
//Permission is hereby granted,
//free of charge, to any person obtaining a copy of this software and associated documentation files(the "Software"), to deal in the Software without restriction,
//including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies of the Software, and to permit persons
//to whom the Software is furnished to do so, subject to the following conditions:
//
//The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
//THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
//WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: vpc.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VpcConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RevisionNumber uint32     `protobuf:"varint,1,opt,name=revision_number,json=revisionNumber,proto3" json:"revision_number,omitempty"`
	RequestId      string     `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Id             string     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	UpdateType     UpdateType `protobuf:"varint,4,opt,name=update_type,json=updateType,proto3,enum=alcor.schema.UpdateType" json:"update_type,omitempty"` // DELTA (default) or FULL
	ProjectId      string     `protobuf:"bytes,5,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name           string     `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Cidr           string     `protobuf:"bytes,7,opt,name=cidr,proto3" json:"cidr,omitempty"`
	TunnelId       uint32     `protobuf:"varint,8,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	GatewayIds     []string   `protobuf:"bytes,9,rep,name=gateway_ids,json=gatewayIds,proto3" json:"gateway_ids,omitempty"`
}

func (x *VpcConfiguration) Reset() {
	*x = VpcConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcConfiguration) ProtoMessage() {}

func (x *VpcConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcConfiguration.ProtoReflect.Descriptor instead.
func (*VpcConfiguration) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{0}
}

func (x *VpcConfiguration) GetRevisionNumber() uint32 {
	if x != nil {
		return x.RevisionNumber
	}
	return 0
}

func (x *VpcConfiguration) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *VpcConfiguration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VpcConfiguration) GetUpdateType() UpdateType {
	if x != nil {
		return x.UpdateType
	}
	return UpdateType_DELTA
}

func (x *VpcConfiguration) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *VpcConfiguration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VpcConfiguration) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *VpcConfiguration) GetTunnelId() uint32 {
	if x != nil {
		return x.TunnelId
	}
	return 0
}

func (x *VpcConfiguration) GetGatewayIds() []string {
	if x != nil {
		return x.GatewayIds
	}
	return nil
}

type VpcState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationType OperationType     `protobuf:"varint,1,opt,name=operation_type,json=operationType,proto3,enum=alcor.schema.OperationType" json:"operation_type,omitempty"`
	Configuration *VpcConfiguration `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *VpcState) Reset() {
	*x = VpcState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VpcState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VpcState) ProtoMessage() {}

func (x *VpcState) ProtoReflect() protoreflect.Message {
	mi := &file_vpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VpcState.ProtoReflect.Descriptor instead.
func (*VpcState) Descriptor() ([]byte, []int) {
	return file_vpc_proto_rawDescGZIP(), []int{1}
}

func (x *VpcState) GetOperationType() OperationType {
	if x != nil {
		return x.OperationType
	}
	return OperationType_INFO
}

func (x *VpcState) GetConfiguration() *VpcConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

var File_vpc_proto protoreflect.FileDescriptor

var file_vpc_proto_rawDesc = []byte{
	0x0a, 0x09, 0x76, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x6c, 0x63,
	0x6f, 0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x10, 0x56, 0x70, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x6c, 0x63, 0x6f, 0x72,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x49, 0x64, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x08, 0x56, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x42, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x6c, 0x63, 0x6f, 0x72,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x6c,
	0x63, 0x6f, 0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x56, 0x70, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x4a, 0x0a, 0x1a, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65, 0x77, 0x65, 0x69, 0x2e, 0x61, 0x6c, 0x63, 0x6f,
	0x72, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x42, 0x03, 0x56, 0x70, 0x63, 0x5a, 0x27, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x75, 0x74, 0x75, 0x72, 0x65,
	0x77, 0x65, 0x69, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x61, 0x6c, 0x63, 0x6f, 0x72, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vpc_proto_rawDescOnce sync.Once
	file_vpc_proto_rawDescData = file_vpc_proto_rawDesc
)

func file_vpc_proto_rawDescGZIP() []byte {
	file_vpc_proto_rawDescOnce.Do(func() {
		file_vpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_vpc_proto_rawDescData)
	})
	return file_vpc_proto_rawDescData
}

var file_vpc_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_vpc_proto_goTypes = []interface{}{
	(*VpcConfiguration)(nil), // 0: alcor.schema.VpcConfiguration
	(*VpcState)(nil),         // 1: alcor.schema.VpcState
	(UpdateType)(0),          // 2: alcor.schema.UpdateType
	(OperationType)(0),       // 3: alcor.schema.OperationType
}
var file_vpc_proto_depIdxs = []int32{
	2, // 0: alcor.schema.VpcConfiguration.update_type:type_name -> alcor.schema.UpdateType
	3, // 1: alcor.schema.VpcState.operation_type:type_name -> alcor.schema.OperationType
	0, // 2: alcor.schema.VpcState.configuration:type_name -> alcor.schema.VpcConfiguration
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_vpc_proto_init() }
func file_vpc_proto_init() {
	if File_vpc_proto != nil {
		return
	}
	file_common_proto_init()
	file_gateway_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VpcState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vpc_proto_goTypes,
		DependencyIndexes: file_vpc_proto_depIdxs,
		MessageInfos:      file_vpc_proto_msgTypes,
	}.Build()
	File_vpc_proto = out.File
	file_vpc_proto_rawDesc = nil
	file_vpc_proto_goTypes = nil
	file_vpc_proto_depIdxs = nil
}
